name: Laravel

on:
  push:
    branches:
      - development
      - staging
      - production

jobs:
  DeployDevelopment:
    runs-on: ubuntu-18.04
    if: github.ref == 'refs/heads/development'

    environment:
      name: development
      url: https://ewaseet.dev.wedev.sbs

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: db
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    -
      uses: actions/checkout@v2
    -
      name: Output Run ID
      run: echo ${{ github.run_id }}
    -
      name: Output Run Number
      run: echo ${{ github.run_number }}
    -
      name: Setup PHP with PECL extension
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.1'
        extensions: imagick, swoole
    -
      name: Verify MySQL connection
      run: |
        mysql --version
        sudo apt-get install -y mysql-client
        mysql --host 127.0.0.1 --port 3306 -uuser -ppassword -e "SHOW DATABASES"
    -
      name: Import database
      run: |
        mysql --version
        mysql --host 127.0.0.1 --port 3306 -uuser -ppassword db < .cicd/mysql/db.sql
    -
      name: Copy .env
      run: |
        php -r "file_exists('.env') || copy('.env.example', '.env');"
    -
      name: Install Dependencies
      run: |
        composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
    -
      name: Generate key
      run: php artisan key:generate
    -
      name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache
    -
      name: Extract branch name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
      id: extract_branch
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.CR_PAT }}
    -
      name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        file: ./Dockerfile
        push: true
        target: ${{ steps.extract_branch.outputs.branch }}
        tags: ghcr.io/${{ github.repository }}:${{ steps.extract_branch.outputs.branch }}
        build-args: |
          RUN_ID=${{ github.run_number }}
    -
      name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}


  DeployProduction:
    runs-on: ubuntu-18.04
    if: github.ref == 'refs/heads/production'

    environment:
      name: development
      url: https://ewaseet.dev.wedev.sbs

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_DATABASE: db
          MYSQL_USER: user
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - uses: actions/checkout@v2
      - name: Output Run ID
        run: echo ${{ github.run_id }}
      - name: Output Run Number
        run: echo ${{ github.run_number }}
      - name: Setup PHP with PECL extension
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.4'
          extensions: imagick, swoole
      - name: Verify MySQL connection
        run: |
          mysql --version
          sudo apt-get install -y mysql-client
          mysql --host 127.0.0.1 --port 3306 -uuser -ppassword -e "SHOW DATABASES"
      - name: Import database
        run: |
          mysql --version
          mysql --host 127.0.0.1 --port 3306 -uuser -ppassword db < .cicd/mysql/db.sql
      - name: Copy .env
        run: |
          php -r "file_exists('.env') || copy('.env.example', '.env');"
      - name: Install Nova
        run: |
          composer config http-basic.nova.laravel.com ${{ secrets.NOVA_USERNAME }} ${{ secrets.NOVA_PASSWORD }}
          composer config repositories.nova '{"type": "composer", "url": "https://nova.laravel.com"}' --file composer.json
          composer update --prefer-dist
      - name: Install Dependencies
        run: |
          composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist
      - name: Generate key
        run: php artisan key:generate
      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache
      - name: Run Testsuite
        run: vendor/bin/phpunit tests/
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          target: ${{ steps.extract_branch.outputs.branch }}
          tags: ghcr.io/${{ github.repository }}:${{ steps.extract_branch.outputs.branch }}
          build-args: |
            RUN_ID=${{ github.run_number }}
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
